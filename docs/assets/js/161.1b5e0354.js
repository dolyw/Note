(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{533:function(t,e,s){"use strict";s.r(e);var r=s(9),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"项目介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目介绍"}},[t._v("#")]),t._v(" 项目介绍")]),t._v(" "),s("p",[s("a",{attrs:{href:"LICENSE"}},[s("img",{attrs:{src:"https://img.shields.io/badge/license-MIT-blue.svg",alt:"License"}})]),t._v(" "),s("a",{attrs:{href:"https://github.com/wang926454/ShiroJwt/pulls",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/badge/PRs-welcome-brightgreen.svg",alt:"PRs Welcome"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/wang926454/ShiroJwt",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/github/stars/wang926454/ShiroJwt.svg?style=social&label=Stars",alt:"GitHub stars"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/wang926454/ShiroJwt",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/github/forks/wang926454/ShiroJwt.svg?style=social&label=Fork",alt:"GitHub forks"}}),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("前端地址")]),t._v(": "),s("a",{attrs:{href:"https://github.com/wang926454/VueStudy/tree/master/VueStudy08-JWT",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wang926454/VueStudy/tree/master/VueStudy08-JWT"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#issues"}},[t._v("#")]),t._v(" Issues")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/dolyw/ShiroJwt/issues/14",target:"_blank",rel:"noopener noreferrer"}},[t._v("#14 重复请求会不会生成多个token"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dolyw/ShiroJwt/issues/19",target:"_blank",rel:"noopener noreferrer"}},[t._v("#19 跨域sso问题"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/dolyw/ShiroJwt/issues/22",target:"_blank",rel:"noopener noreferrer"}},[t._v("#22 如果是微服务的话，是不是每个微服务都的写一套这样的shiro?"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wliduo/CDN@1.1/feed/qq.png",height:"180"}})]),t._v(" "),s("p",[t._v("有疑问请扫码加"),s("strong",[t._v("QQ")]),t._v("群交流: "),s("strong",[t._v("779168604")])]),t._v(" "),s("h2",{attrs:{id:"项目相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目相关"}},[t._v("#")]),t._v(" 项目相关")]),t._v(" "),s("ul",[s("li",[t._v("JavaDoc: "),s("a",{attrs:{href:"https://apidoc.gitee.com/dolyw/ShiroJwt",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://apidoc.gitee.com/dolyw/ShiroJwt"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"项目介绍-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目介绍-2"}},[t._v("#")]),t._v(" 项目介绍")]),t._v(" "),s("ol",[s("li",[t._v("RESTful API")]),t._v(" "),s("li",[t._v("Maven集成Mybatis Generator(逆向工程)")]),t._v(" "),s("li",[t._v("Shiro + Java-JWT实现无状态鉴权机制(Token)")]),t._v(" "),s("li",[t._v("密码加密(采用AES-128 + Base64的方式)")]),t._v(" "),s("li",[t._v("集成Redis(Jedis)")]),t._v(" "),s("li",[t._v("重写Shiro缓存机制(Redis)")]),t._v(" "),s("li",[t._v("Redis中保存RefreshToken信息(做到JWT的可控性)")]),t._v(" "),s("li",[t._v("根据RefreshToken自动刷新AccessToken")])]),t._v(" "),s("h4",{attrs:{id:"关于shiro-java-jwt实现无状态鉴权机制-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于shiro-java-jwt实现无状态鉴权机制-token"}},[t._v("#")]),t._v(" 关于Shiro + Java-JWT实现无状态鉴权机制(Token)")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("首先"),s("strong",[t._v("Post")]),t._v("用户名与密码到"),s("strong",[t._v("user/login")]),t._v("登入，成功返回加密的"),s("strong",[t._v("AccessToken")]),t._v("，失败直接返回401错误(帐号或密码不正确)")]),t._v(" "),s("li",[t._v("以后访问都带上这个"),s("strong",[t._v("AccessToken")]),t._v("即可")]),t._v(" "),s("li",[t._v("鉴权流程主要是重写了"),s("strong",[t._v("Shiro")]),t._v("的入口过滤器"),s("strong",[t._v("JWTFilter")]),t._v("("),s("strong",[t._v("BasicHttpAuthenticationFilter")]),t._v(")，判断请求"),s("strong",[t._v("Header")]),t._v("里面是否包含"),s("strong",[t._v("Authorization")]),t._v("字段")]),t._v(" "),s("li",[t._v("有就进行"),s("strong",[t._v("Shiro")]),t._v("的"),s("strong",[t._v("Token")]),t._v("登录认证授权(用户访问每一个需要权限的请求必须在"),s("strong",[t._v("Header")]),t._v("中添加"),s("strong",[t._v("Authorization")]),t._v("字段存放"),s("strong",[t._v("AccessToken")]),t._v(")，没有就以游客直接访问(有权限管控的话，以游客访问就会被拦截)")])])]),t._v(" "),s("h4",{attrs:{id:"关于aes-128-base64当两个用户的明文密码相同时进行加密-会发现数据库中存在相同结构的暗文密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于aes-128-base64当两个用户的明文密码相同时进行加密-会发现数据库中存在相同结构的暗文密码"}},[t._v("#")]),t._v(" 关于AES-128 + Base64当两个用户的明文密码相同时进行加密，会发现数据库中存在相同结构的暗文密码")]),t._v(" "),s("blockquote",[s("p",[t._v("大部分是以"),s("strong",[t._v("MD5 + 盐")]),t._v("的形式解决了这个问题(详细自己百度)，我采用"),s("strong",[t._v("AES-128 + Base64")]),t._v("是以帐号+密码的形式进行加密密码，因为帐号具有唯一性，所以也不会出现相同结构的暗文密码这个问题")])]),t._v(" "),s("h4",{attrs:{id:"关于将jedis工具类与springboot整合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于将jedis工具类与springboot整合"}},[t._v("#")]),t._v(" 关于将Jedis工具类与SpringBoot整合")]),t._v(" "),s("blockquote",[s("p",[t._v("本来是直接将"),s("strong",[t._v("JedisUtil")]),t._v("注入为"),s("strong",[t._v("Bean")]),t._v("，每次使用直接"),s("code",[t._v("@Autowired")]),t._v("注入使用即可，但是在重写"),s("strong",[t._v("Shiro")]),t._v("的"),s("strong",[t._v("CustomCache")]),t._v("无法注入"),s("strong",[t._v("JedisUtil")]),t._v("，所以就改成静态注入"),s("strong",[t._v("JedisPool连接池")]),t._v("，"),s("strong",[t._v("JedisUtil工具类")]),t._v("还是直接调用静态方法，无需"),s("code",[t._v("@Autowired")]),t._v("注入")])]),t._v(" "),s("h4",{attrs:{id:"关于redis中保存refreshtoken信息-做到jwt的可控性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于redis中保存refreshtoken信息-做到jwt的可控性"}},[t._v("#")]),t._v(" 关于Redis中保存RefreshToken信息(做到JWT的可控性)")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("登录认证通过后返回"),s("strong",[t._v("AccessToken")]),t._v("信息(在"),s("strong",[t._v("AccessToken")]),t._v("中"),s("strong",[t._v("保存当前的时间戳和帐号")]),t._v(")")]),t._v(" "),s("li",[t._v("同时在"),s("strong",[t._v("Redis")]),t._v("中设置一条以"),s("strong",[t._v("帐号为Key，Value为当前时间戳(登录时间)"),s("strong",[t._v("的")]),t._v("RefreshToken")])]),t._v(" "),s("li",[t._v("现在认证时必须"),s("strong",[t._v("AccessToken")]),t._v("没失效以及"),s("strong",[t._v("Redis")]),t._v("存在所对应的"),s("strong",[t._v("RefreshToken")]),t._v("，且"),s("strong",[t._v("RefreshToken时间戳")]),t._v("和"),s("strong",[t._v("AccessToken信息中时间戳一致")]),t._v("才算认证通过，这样可以做到"),s("strong",[t._v("JWT的可控性")])]),t._v(" "),s("li",[t._v("如果重新登录获取了新的"),s("strong",[t._v("AccessToken")]),t._v("，旧的"),s("strong",[t._v("AccessToken")]),t._v("就认证不了，因为"),s("strong",[t._v("Redis")]),t._v("中所存放的的"),s("strong",[t._v("RefreshToken时间戳信息")]),t._v("只会和最新生成的"),s("strong",[t._v("AccessToken信息中携带的时间戳一致")]),t._v("，这样每个用户就只能使用最新的"),s("strong",[t._v("AccessToken")]),t._v("认证")]),t._v(" "),s("li",[s("strong",[t._v("Redis")]),t._v("的"),s("strong",[t._v("RefreshToken")]),t._v("也可以用来判断用户是否在线，如果删除"),s("strong",[t._v("Redis")]),t._v("的某个"),s("strong",[t._v("RefreshToken")]),t._v("，那这个"),s("strong",[t._v("RefreshToken")]),t._v("所对应的"),s("strong",[t._v("AccessToken")]),t._v("之后也无法通过认证了，就相当于控制了用户的登录，可以剔除用户")])])]),t._v(" "),s("h4",{attrs:{id:"关于根据refreshtoken自动刷新accesstoken"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于根据refreshtoken自动刷新accesstoken"}},[t._v("#")]),t._v(" 关于根据RefreshToken自动刷新AccessToken")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("本身"),s("strong",[t._v("AccessToken的过期时间为5分钟")]),t._v("(配置文件可配置)，"),s("strong",[t._v("RefreshToken过期时间为30分钟")]),t._v("(配置文件可配置)")]),t._v(" "),s("li",[t._v("当登录后时间过了5分钟之后，当前"),s("strong",[t._v("AccessToken")]),t._v("便会过期失效，再次带上"),s("strong",[t._v("AccessToken")]),t._v("访问"),s("strong",[t._v("JWT")]),t._v("会抛出"),s("strong",[t._v("TokenExpiredException")]),t._v("异常说明"),s("strong",[t._v("Token")]),t._v("过期")]),t._v(" "),s("li",[t._v("开始判断是否要"),s("strong",[t._v("进行AccessToken刷新")]),t._v("，"),s("strong",[t._v("Redis查询当前用户的RefreshToken是否存在")]),t._v("，"),s("strong",[t._v("以及这个RefreshToken所携带时间戳")]),t._v("和"),s("strong",[t._v("过期AccessToken所携带的时间戳")]),t._v("是否"),s("strong",[t._v("一致")])]),t._v(" "),s("li",[s("strong",[t._v("如果存在且一致就进行AccessToken刷新，设置过期时间为5分钟(配置文件可配置)，时间戳为当前最新时间戳，同时也设置RefreshToken中的时间戳为当前最新时间戳，刷新过期时间重新为30分钟过期(配置文件可配置)")])]),t._v(" "),s("li",[t._v("最终将刷新的"),s("strong",[t._v("AccessToken")]),t._v("存放在"),s("strong",[t._v("Response的Header中的Authorization字段")]),t._v("返回(前端进行获取替换，下次用新的"),s("strong",[t._v("AccessToken")]),t._v("进行访问)")])])]),t._v(" "),s("h2",{attrs:{id:"软件架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软件架构"}},[t._v("#")]),t._v(" 软件架构")]),t._v(" "),s("ol",[s("li",[t._v("SpringBoot + Mybatis核心框架")]),t._v(" "),s("li",[t._v("PageHelper插件 + 通用Mapper插件")]),t._v(" "),s("li",[t._v("Shiro + Java-JWT无状态鉴权认证机制")]),t._v(" "),s("li",[t._v("Redis(Jedis)缓存框架")])]),t._v(" "),s("h2",{attrs:{id:"安装教程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装教程"}},[t._v("#")]),t._v(" 安装教程")]),t._v(" "),s("ol",[s("li",[t._v("数据库帐号密码默认为root，如有修改，请自行修改配置文件application.yml")]),t._v(" "),s("li",[t._v("解压后执行src\\main\\resources\\sql\\MySQL.sql脚本创建数据库和表")]),t._v(" "),s("li",[t._v("Redis需要自行安装Redis服务，端口密码默认")]),t._v(" "),s("li",[t._v("SpringBoot直接启动即可，测试工具PostMan")])]),t._v(" "),s("h2",{attrs:{id:"使用说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用说明"}},[t._v("#")]),t._v(" 使用说明")]),t._v(" "),s("h4",{attrs:{id:"mybatis-generator使用-可视化自定义模板快速生成基础代码-https-github-com-wang926454-viewgenerator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-generator使用-可视化自定义模板快速生成基础代码-https-github-com-wang926454-viewgenerator"}},[t._v("#")]),t._v(" Mybatis Generator使用(可视化自定义模板快速生成基础代码:"),s("a",{attrs:{href:"https://github.com/wang926454/ViewGenerator",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wang926454/ViewGenerator"),s("OutboundLink")],1),t._v(")")]),t._v(" "),s("p",[t._v("先配置src\\main\\resources\\generator\\generatorConfig.xml文件(默认配置都在原来包的下一级reverse包下)，在pom.xml这一级目录(即项目根目录下)的命令行窗口执行(前提是配置了mvn)(IDEA可以直接在Maven窗口Plugins中双击执行)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("mvn mybatis-generator:generate\n")])])]),s("h4",{attrs:{id:"postman使用-token获取及使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postman使用-token获取及使用"}},[t._v("#")]),t._v(" PostMan使用(Token获取及使用)")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("先设置"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),t._v("为application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("json\n")])])]),s("p",[s("img",{attrs:{src:"https://docs.dolyw.com/Project/ShiroJwt/image/20181006001.PNG",alt:"image text"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("然后填写请求参数帐号密码信息\n")])])]),s("p",[s("img",{attrs:{src:"https://docs.dolyw.com/Project/ShiroJwt/image/20181006002.PNG",alt:"image text"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("进行请求访问，请求访问成功\n")])])]),s("p",[s("img",{attrs:{src:"https://docs.dolyw.com/Project/ShiroJwt/image/20181006003.PNG",alt:"image text"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("点击查看"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Header")]),t._v("信息的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Authorization")]),t._v("属性即是"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Token")]),t._v("字段\n")])])]),s("p",[s("img",{attrs:{src:"https://docs.dolyw.com/Project/ShiroJwt/image/20181006004.PNG",alt:"image text"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("访问需要权限的请求将"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Token")]),t._v("字段放在"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Header")]),t._v("信息的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Authorization")]),t._v("属性访问即可\n")])])]),s("p",[s("img",{attrs:{src:"https://docs.dolyw.com/Project/ShiroJwt/image/20181006005.PNG",alt:"image text"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Token")]),t._v("的自动刷新也是在"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Token")]),t._v("失效时返回新的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Token")]),t._v("在"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Header")]),t._v("信息的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Authorization")]),t._v("属性\n")])])]),s("h2",{attrs:{id:"搭建参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建参考"}},[t._v("#")]),t._v(" 搭建参考")]),t._v(" "),s("ol",[s("li",[t._v("感谢SmithCruise的Shiro+JWT+Spring Boot Restful简易教程: "),s("a",{attrs:{href:"https://www.jianshu.com/p/f37f8c295057",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/f37f8c295057"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢王洪玉的[Shiro入门]（一）使用Redis作为缓存管理器: "),s("a",{attrs:{href:"https://blog.csdn.net/why15732625998/article/details/78729254",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/why15732625998/article/details/78729254"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢袋🐴饲养员的springboot(七).springboot整合jedis实现redis缓存: "),s("a",{attrs:{href:"http://www.cnblogs.com/GodHeng/p/9301330.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.cnblogs.com/GodHeng/p/9301330.html"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢W_Z_W_888的spring注入静态变量的三种方法及其注意事项: "),s("a",{attrs:{href:"https://blog.csdn.net/W_Z_W_888/article/details/79979103",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/W_Z_W_888/article/details/79979103"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢天降风云的Vue2.0+ElementUI+PageHelper实现的表格分页: "),s("a",{attrs:{href:"https://blog.csdn.net/u012907049/article/details/70237457",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/u012907049/article/details/70237457"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢yaxx的Vuejs之axios获取Http响应头: "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000009125333",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000009125333"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢Twilight的解决使用jwt刷新token带来的问题: "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000013151506",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000013151506"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢chuhx的shiro拦截器，返回json数据: "),s("a",{attrs:{href:"https://blog.csdn.net/chuhx/article/details/51148877",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/chuhx/article/details/51148877"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("感谢yidao620c的Shiro自带拦截器配置规则: "),s("a",{attrs:{href:"https://github.com/yidao620c/SpringBootBucket/tree/master/springboot-jwt",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/yidao620c/SpringBootBucket/tree/master/springboot-jwt"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"参与贡献"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参与贡献"}},[t._v("#")]),t._v(" 参与贡献")]),t._v(" "),s("ol",[s("li",[t._v("Fork 本项目")]),t._v(" "),s("li",[t._v("新建 Feat_xxx 分支")]),t._v(" "),s("li",[t._v("提交代码")]),t._v(" "),s("li",[t._v("新建 Pull Request")])])])}),[],!1,null,null,null);e.default=a.exports}}]);